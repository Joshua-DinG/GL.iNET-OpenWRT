name: build gl.inet

on:
  workflow_dispatch:
    inputs:
      device:
        description: '选择设备'     
        required: true
        default: 'target_wlan_ap-gl-ax1800' 
        type: choice
        options:
          - target_x86-64
          - target_wlan_ap-gl-ax1800
          - target_wlan_ap-gl-axt1800
          - target_wlan_ap-gl-axt1800-5-4
          - target_wlan_ap-gl-ax1800-5-4
          - target_ipq40xx_gl-a1300
          - target_mt7981_gl-mt2500
          - target_mt7981_gl-mt3000
          - target_ath79_gl-ar150
          - target_ath79_gl-ar300m-lite
          - target_ath79_gl-ar300m-nand
          - target_ath79_gl-ar750
          - target_ath79_gl-ar750s
          - target_ath79_gl-e750
          - target_ath79_gl-mifi
          - target_ath79_gl-s200
          - target_ath79_gl-x300b-nor-nand
          - target_ath79_gl-x300b-nor
          - target_ath79_gl-x300b
          - target_ath79_gl-x750-nor
          - target_ath79_gl-x750
          - target_ipq40xx_gl-ap1300
          - target_ipq40xx_gl-b1300
          - target_ipq40xx_gl-b1300th
          - target_ipq40xx_gl-s1300-emmc
          - target_ipq40xx_gl-s1300
          - target_mt7981_gl-x3000
          - target_mt7981_gl-xe3000
          - target_mvebu_gl-mv1000
          - target_qsdk11_5_gl-ax1800
          - target_qsdk11_5_gl-axt1800
          - target_qsdk11_gl-s1300
          - target_qsdk53_gl-s1300
          - target_ramips_gl-mt1300
          - target_ramips_gl-mt300n-v2
          - target_ramips_microuter-n300
          - target_ramips_vixmini
          - target_rockchip_r2s
          - target_siflower_gl-sf1200
          - target_siflower_gl-sft1200
          - target_wlan_ap-gl-ax1800-common-5-4
          - target_wlan_ap-gl-ax1800-common
        
      ui:
        description: '是否包含官方UI'
        required: false
        type: boolean
        
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: update
      run: |
        sudo apt update
        sudo apt upgrade -y
        sudo apt install build-essential libncurses5-dev gawk git libssl-dev gettext zlib1g-dev swig unzip time rsync python3 python3-setuptools python3-yaml subversion -y
        git config --global user.email "aa@163.com"
        git config --global user.name "aa"
    - name: make 
      run: |
        ./build.sh ~ ${{ inputs.device }} ${{ inputs.ui }}
        
    - name: Organize files
      id: organize
      if: true && !failure() && !cancelled()
      run: |
        cd ~/openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
        
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled() && !failure()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
            
    - name: Generate release tag
      id: tag
      if: true && !failure() && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        echo "::set-output name=status::success"
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled() && !failure()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: ${{ env.FIRMWARE }}/*
